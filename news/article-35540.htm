<!DOCTYPE html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://winxraygithub.github.io/news/article-35540.htm" />
    <meta charset="utf-8">
    <title>golang 的panic、defer、recover和error应用方式</title>
        <meta name="description" content="&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;异常处理在软件开发过程中是避不开的环节，各类高级语言都有自己的异常处理机制，例如：java的try-catch-finally、py" />
        <link rel="icon" href="/assets/website/img/winxraygithub/favicon.ico" type="image/x-icon"/>
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <link href="https://fonts.googleapis.com/css?family=Nunito:300,400,700" rel="stylesheet">
    <link rel="stylesheet" href="__ADDON__/fonts/winxraygithub/icomoon/style.css">
    <link rel="stylesheet" href="/assets/website/css/winxraygithub/bootstrap.min.css">
    <link rel="stylesheet" href="/assets/website/css/winxraygithub/jquery-ui.css">
    <link rel="stylesheet" href="/assets/website/css/winxraygithub/owl.carousel.min.css">
    <link rel="stylesheet" href="/assets/website/css/winxraygithub/owl.theme.default.min.css">
    <link rel="stylesheet" href="/assets/website/css/winxraygithub/owl.theme.default.min.css">
    <link rel="stylesheet" href="/assets/website/css/winxraygithub/jquery.fancybox.min.css">
    <link rel="stylesheet" href="/assets/website/css/winxraygithub/bootstrap-datepicker.css">
    <link rel="stylesheet" href="__ADDON__/fonts/winxraygithub/flaticon/font/flaticon.css">
    <link rel="stylesheet" href="/assets/website/css/winxraygithub/aos.css">
    <link rel="stylesheet" href="/assets/website/css/winxraygithub/style.css">
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-HFCQTZN3L8"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-HFCQTZN3L8');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
    <div id="overlayer"></div>
    <div class="loader">
        <div class="spinner-border text-primary" role="status">
            <span class="sr-only">Loading...</span>
        </div>
    </div>
    <div class="site-wrap" id="home-section">
                <div class="site-mobile-menu site-navbar-target">
            <div class="site-mobile-menu-header">
                <div class="site-mobile-menu-close mt-3">
                    <span class="icon-close2 js-menu-toggle"></span>
                </div>
            </div>
            <div class="site-mobile-menu-body"></div>
        </div>
        <header class="site-navbar py-4 js-sticky-header site-navbar-target" role="banner">
            <div class="container">
                <div class="row align-items-center">
                    <div class="col-6 col-md-3 col-xl-4  d-block">
                                                <a href="/" class="text-black h2 mb-0">Winxray<span class="text-primary">github</span></a>
                                            </div>
                    <div class="col-12 col-md-9 col-xl-8 main-menu">
                        <nav class="site-navigation position-relative text-right" role="navigation">
                            <ul class="site-menu main-menu js-clone-nav mr-auto d-none d-lg-block ml-0 pl-0">
                                                                <li><a href="/" class="nav-link">首页</a></li>
                                                                <li><a href="/free-nodes/" class="nav-link">免费节点</a></li>
                                                                <li><a href="/paid-subscribe/" class="nav-link">推荐机场</a></li>
                                                                <li><a href="/news/" class="nav-link">新闻资讯</a></li>
                                                                
                                <li><a href="#" class="nav-link">关于</a></li>
                                <li><a href="#" class="nav-link">联系</a></li>
                            </ul>
                        </nav>
                    </div>
                    <div class="col-6 col-md-9 d-inline-block d-lg-none ml-md-0"><a href="#" class="site-menu-toggle js-menu-toggle text-black float-right"><span class="icon-menu h3"></span></a></div>
                </div>
            </div>
        </header>

        <div class="site-blocks-cover list" style="overflow: hidden;">
            <div class="container">
                <div class="row align-items-center justify-content-center">
                    <div class="col-md-12" style="position: relative;" data-aos="fade-up" data-aos-delay="200">
                        <img href="/assets/website/img/winxraygithub/undraw_investing_7u74.svg" alt="Image" class="img-fluid img-absolute">
                        <div class="row" data-aos="fade-up" data-aos-delay="200">
                            <div class="col-lg-6 mr-auto">
                                <h1>golang 的panic、defer、recover和error应用方式</h1>
                                <p class="mb-5">
                                    <a href="/">首页</a> / <a href="/news/">新闻资讯</a> / <span>正文</span>
                                </p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="feature-big my-5">
            <div class="container">
                <div class="row">
                    <div class="col-md-9">
                                        <input type="hidden" id="share-website-info" data-name="" data-url="">
                  				  				  				<div id="content_views" class="htmledit_views"> <p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;异常处理在软件开发过程中是避不开的环节，各类高级语言都有自己的异常处理机制，例如：java的try-catch-finally、python的try-except 等，然而蛋疼的是golang并没有类似的捕获异常的方式，而是将异常和错误进行区分。所谓异常就是不在软件开发过程中所预料到的不正常行为，而错误是在开发过程中我们就可以预测到可能存在的业务上的问题，例如：在开发读取文件的程序过程中，开发人员认为这个文件不能不存在，但是很显然文件可能会不存在，因此这个不正常对与开发人员来说是一个异常；又例如：在执行一个除法计算的函数div(a,b float64)，除数b如果是0是不应该被传递到函数中的，这个时候我们清楚的知道应该告诉调用者，你不应该传递0 ，所以在div函数中可以给调用者返回一个错误。异常和错误的处理在java中都可以用throw error 并且 进行try catch。而golang则提供了panic、recover、error的处理方式。</p> <h2 id="%E4%B8%80%E3%80%81%E5%85%B3%E4%BA%8Epanic%E3%80%81defer%E5%92%8Crecover">一、关于panic、defer和recover</h2> <p>&nbsp; &nbsp; 在golang中提供了一个类似java finally的做法，这个就是defer，defer 代码段是用于确保在函数运行之后仍然可以被执行的代码。例如：</p> <pre><code>package main import "fmt" import "errors" func hello(a int) error{     defer func() {         fmt.Println("hello的最后执行")     }()      fmt.Println("step 1")      if a==0{       errors.New("a不能为0")     }           fmt.Println("step 2")     return nil       } func main() {    err:=hello(0)    fmt.Printf( "hello返回：%v",err)     }</code></pre> <p>执行结果是：</p> <pre><code>step 1 hello的最后执行 hello返回：a不能为0</code></pre> <p>&nbsp; &nbsp;</p> <p>&nbsp; &nbsp;golang的异常处理方式是panic()。 panic其实是制造一种系统宕机，任何的异常如果继续运行也许就已经偏离的程序的逻辑路线，所以也许宕机是最好的处理方式。但是go在宕机之前仍然会执行defer，也提供了系统恢复的可能，想要在panic之后仍然确保系统可以恢复运行，我们就需要利用recover。处理方式如下所示：</p> <pre><code class="language-Go">package main import "fmt" func main() {     defer func() {         if info := recover(); info != nil {             fmt.Println("有人触发了宕机：", info)         } else {             fmt.Println("程序执行正常退出")         }     }()      fmt.Println("step 1")      panic("我要宕机")      fmt.Println("step 2")          defer func() {         fmt.Println("step 3")     }() }</code></pre> <p>&nbsp;运行结果如下：</p> <pre><code>step 1 有人触发了宕机：我要宕机</code></pre> <h2 id="%E4%BA%8C%E3%80%81%E5%85%B3%E4%BA%8Eerrors%C2%A0%20%C2%A0">二、关于errors&nbsp; &nbsp;</h2> <p>errors 包是golang的错误的处理方式，可预测的错误都应该被返回和处理，例如：</p> <pre><code class="language-Go">func say(a,b string)(string, error){    if b=="fuck"{        return 0, errors.New("不能说脏话"); &nbsp;  }  &nbsp;&nbsp;&nbsp;return fmt.Sprintf("%s:%s",a,b),nil&nbsp;  &nbsp;}&nbsp;</code></pre> <p>&nbsp; &nbsp; 但是这样的错误处理方式在多层次的调用之后很容易因为不规范的开发或者不小心的处理遗漏。如果层层处理，到最后，我们回顾代码发现到处都是if err != nil { ...... }， 这真的很影响可读性<strong>。</strong>也许这就是golang让人不爽的一点，当然我认为这些个缺点不影响我们使用golang这个优秀的语言。重要的是我们应该为error处理进行规范，以下是我在golang进行项目开发中总结的几点。</p> <p><strong>1、减少不必要的error使用</strong></p> <p>如果这个错误是可预测的并且只有一个，我们可以直接使用bool或者返回nil或者非nil进行区分。例如：</p> <pre><code class="language-Go">ipnet, ok := address.(*net.IPNet) if !ok {     // ipnet应用 }</code></pre> <p><strong>&nbsp;2、多个返回值时，把error放在最后一个</strong></p> <p><strong>&nbsp;3、建立错误信息常量，而不是随意使用</strong></p> <p>这么做有利于错误信息的判断、排错、提示。例如：</p> <pre><code>var ERR_CLOSED_PIPE = errors.New("io: read/write on closed pipe") var ERR_NO_PROGRESS = errors.New("multiple Read calls return no data or error") var ERR_SHORT_BUFFER = errors.New("short buffer") var ERR_SHORT_WRITE = errors.New("short write")</code></pre> <p><strong>4、多层次调用函数时，在每一层都日志输出</strong></p> <p>这样做有利于定位故障。</p> <p><strong>5、错误如果不影响系统运行，则不返回error</strong></p> <p>如果调用方不在呼是否执行出问题，函数就不要返回error了，免得调用方麻烦混淆使用。</p> <p><strong>6、为便于区分错误类型，可以统一定制错误类</strong></p> <p>&nbsp; &nbsp; &nbsp; 定义自己的错误类，然后使用.(type)进行区分处理。<br /> &nbsp; &nbsp; &nbsp;</p> <p>以上是阶段性的思路，如有不正确的或遗漏，请见谅！</p> <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p> </p></div> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-35539.htm">java多线程学习2，线程的属性</a></p>
                                        <p>下一个：<a href="/news/article-36052.htm">Java程序整数的位运算</a></p>
                                    </div>
                                    </div>
                    <div class="col-md-3">
                        <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/free-nodes/2024-11-15-winxray-node-github.htm" title="11月15日 | Winxray Github每天更新22.2M/S免费节点订阅链接">11月15日 | Winxray Github每天更新22.2M/S免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/news/article-27018.htm" title="实践搭建Redis一主两从三哨兵">实践搭建Redis一主两从三哨兵</a></li>
                        <li class="py-2"><a href="/news/article-33159.htm" title="KMP算法中的next数组详解">KMP算法中的next数组详解</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-10-26-free-node-subscribe-links.htm" title="10月26日 | Winxray Github每天更新18.5M/S免费节点订阅链接">10月26日 | Winxray Github每天更新18.5M/S免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-10-15-latest-winxray-node.htm" title="10月15日 | Winxray Github每天更新20M/S免费节点订阅链接">10月15日 | Winxray Github每天更新20M/S免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-12-29-today-winxray-node.htm" title="12月29日 | Winxray Github每天更新21.2M/S免费节点订阅地址分享">12月29日 | Winxray Github每天更新21.2M/S免费节点订阅地址分享</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-12-25-winxray-windows.htm" title="12月25日 | Winxray Github每天更新18.5M/S免费节点订阅地址分享">12月25日 | Winxray Github每天更新18.5M/S免费节点订阅地址分享</a></li>
                        <li class="py-2"><a href="/news/article-28879.htm" title="springboot嵌入式数据库derby初探">springboot嵌入式数据库derby初探</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-12-21-winxray-node-share.htm" title="12月21日 | Winxray Github每天更新20M/S免费节点订阅地址分享">12月21日 | Winxray Github每天更新20M/S免费节点订阅地址分享</a></li>
                        <li class="py-2"><a href="/news/article-29342.htm" title="MySQL如何使用YEAR数据类型在表中存储年值？">MySQL如何使用YEAR数据类型在表中存储年值？</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">21</span> <a href="/date/2025-01/" title="2025-01 归档">2025-01</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">93</span> <a href="/date/2024-12/" title="2024-12 归档">2024-12</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">34</span> <a href="/date/2024-11/" title="2024-11 归档">2024-11</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">25</span> <a href="/date/2024-10/" title="2024-10 归档">2024-10</a></h4>
            </li>
                    </ul>
    </div>
</div>

                    </div>
                </div>
            </div>
        </div>
                <div class="footer py-5 text-center">
            <div class="container">
                <div class="row mb-5">
                    <div class="col-12">
                        <p class="mb-0">
                            <a href="#" class="p-3"><span class="icon-facebook"></span></a>
                            <a href="#" class="p-3"><span class="icon-twitter"></span></a>
                            <a href="#" class="p-3"><span class="icon-instagram"></span></a>
                            <a href="#" class="p-3"><span class="icon-linkedin"></span></a>
                            <a href="#" class="p-3"><span class="icon-pinterest"></span></a>
                        </p>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                    <p>
                        <a href="/">首页</a> | 
                        <a href="/free-node/">免费节点</a> | 
                        <a href="/news/">新闻资讯</a> |
                        <a href="/about-us.htm">关于我们</a> |
                        <a href="/disclaimer.htm">免责申明</a> |
                        <a href="/privacy.htm">隐私申明</a> |
                        <a href="/sitemap.xml">网站地图</a>
                    </p>
                        <p class="mb-0">
                        Winxray Github免费节点分享站 版权所有 Powered by WordPress
                        </p>
                    </div>
                </div>
            </div>
        </div>
        <script src="/assets/website/js/frontend/winxraygithub/jquery-3.3.1.min.js"></script>
        <script src="/assets/website/js/frontend/winxraygithub/jquery-ui.js"></script>
        <script src="/assets/website/js/frontend/winxraygithub/popper.min.js"></script>
        <script src="/assets/website/js/frontend/winxraygithub/bootstrap.min.js"></script>
        <script src="/assets/website/js/frontend/winxraygithub/owl.carousel.min.js"></script>
        <script src="/assets/website/js/frontend/winxraygithub/jquery.countdown.min.js"></script>
        <script src="/assets/website/js/frontend/winxraygithub/bootstrap-datepicker.min.js"></script>
        <script src="/assets/website/js/frontend/winxraygithub/jquery.easing.1.3.js"></script>
        <script src="/assets/website/js/frontend/winxraygithub/aos.js"></script>
        <script src="/assets/website/js/frontend/winxraygithub/jquery.fancybox.min.js"></script>
        <script src="/assets/website/js/frontend/winxraygithub/jquery.sticky.js"></script>
        <script src="/assets/website/js/frontend/winxraygithub/main.js"></script>
        <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script>
        <script src="/assets/website/js/frontend/G.js"></script>
    </div> <!-- .site-wrap -->
</body>

</html>