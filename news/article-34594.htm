<!DOCTYPE html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://winxraygithub.github.io/news/article-34594.htm" />
    <meta charset="utf-8">
    <title>python-数据类型的转换_变量的缓存机制</title>
        <meta name="description" content="1. Number 数字类型的强制类型转换 # 我们先定义几个数字类型的变量 			var1 = 24 			var2 = 3.14 			var3 = True 			var4 = 5-8j 			" />
        <link rel="icon" href="/assets/website/img/winxraygithub/favicon.ico" type="image/x-icon"/>
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <link href="https://fonts.googleapis.com/css?family=Nunito:300,400,700" rel="stylesheet">
    <link rel="stylesheet" href="__ADDON__/fonts/winxraygithub/icomoon/style.css">
    <link rel="stylesheet" href="/assets/website/css/winxraygithub/bootstrap.min.css">
    <link rel="stylesheet" href="/assets/website/css/winxraygithub/jquery-ui.css">
    <link rel="stylesheet" href="/assets/website/css/winxraygithub/owl.carousel.min.css">
    <link rel="stylesheet" href="/assets/website/css/winxraygithub/owl.theme.default.min.css">
    <link rel="stylesheet" href="/assets/website/css/winxraygithub/owl.theme.default.min.css">
    <link rel="stylesheet" href="/assets/website/css/winxraygithub/jquery.fancybox.min.css">
    <link rel="stylesheet" href="/assets/website/css/winxraygithub/bootstrap-datepicker.css">
    <link rel="stylesheet" href="__ADDON__/fonts/winxraygithub/flaticon/font/flaticon.css">
    <link rel="stylesheet" href="/assets/website/css/winxraygithub/aos.css">
    <link rel="stylesheet" href="/assets/website/css/winxraygithub/style.css">
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-HFCQTZN3L8"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-HFCQTZN3L8');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
    <div id="overlayer"></div>
    <div class="loader">
        <div class="spinner-border text-primary" role="status">
            <span class="sr-only">Loading...</span>
        </div>
    </div>
    <div class="site-wrap" id="home-section">
                <div class="site-mobile-menu site-navbar-target">
            <div class="site-mobile-menu-header">
                <div class="site-mobile-menu-close mt-3">
                    <span class="icon-close2 js-menu-toggle"></span>
                </div>
            </div>
            <div class="site-mobile-menu-body"></div>
        </div>
        <header class="site-navbar py-4 js-sticky-header site-navbar-target" role="banner">
            <div class="container">
                <div class="row align-items-center">
                    <div class="col-6 col-md-3 col-xl-4  d-block">
                                                <a href="/" class="text-black h2 mb-0">Winxray<span class="text-primary">github</span></a>
                                            </div>
                    <div class="col-12 col-md-9 col-xl-8 main-menu">
                        <nav class="site-navigation position-relative text-right" role="navigation">
                            <ul class="site-menu main-menu js-clone-nav mr-auto d-none d-lg-block ml-0 pl-0">
                                                                <li><a href="/" class="nav-link">首页</a></li>
                                                                <li><a href="/free-nodes/" class="nav-link">免费节点</a></li>
                                                                <li><a href="/paid-subscribe/" class="nav-link">推荐机场</a></li>
                                                                <li><a href="/news/" class="nav-link">新闻资讯</a></li>
                                                                
                                <li><a href="#" class="nav-link">关于</a></li>
                                <li><a href="#" class="nav-link">联系</a></li>
                            </ul>
                        </nav>
                    </div>
                    <div class="col-6 col-md-9 d-inline-block d-lg-none ml-md-0"><a href="#" class="site-menu-toggle js-menu-toggle text-black float-right"><span class="icon-menu h3"></span></a></div>
                </div>
            </div>
        </header>

        <div class="site-blocks-cover list" style="overflow: hidden;">
            <div class="container">
                <div class="row align-items-center justify-content-center">
                    <div class="col-md-12" style="position: relative;" data-aos="fade-up" data-aos-delay="200">
                        <img href="/assets/website/img/winxraygithub/undraw_investing_7u74.svg" alt="Image" class="img-fluid img-absolute">
                        <div class="row" data-aos="fade-up" data-aos-delay="200">
                            <div class="col-lg-6 mr-auto">
                                <h1>python-数据类型的转换_变量的缓存机制</h1>
                                <p class="mb-5">
                                    <a href="/">首页</a> / <a href="/news/">新闻资讯</a> / <span>正文</span>
                                </p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="feature-big my-5">
            <div class="container">
                <div class="row">
                    <div class="col-md-9">
                                        <input type="hidden" id="share-website-info" data-name="" data-url="">
                  				  				  				<div id="content_views" class="markdown_views prism-atom-one-dark"> </h1> <h2> <a id="1_Number___2" rel="nofollow"></a>1. Number 数字类型的强制类型转换</h2> <pre><code># 我们先定义几个数字类型的变量 			var1 = 24 			var2 = 3.14 			var3 = True 			var4 = 5-8j 			var5 = "4399" 			var6 = "abcf1234" 			 # 1.int 强制转换成整型 			res = int(var2) # 24 			res = int(var3) # False =&gt; 0 True =&gt; 1 			# res = int(var4) error 			res = int(var5) # 4399 			# res = int(var6) error 			print(res , type(res)) 			 # 2.float 强制转换成浮点型 			res = float(var1) # 24.0 			res = float(var3) # True =&gt; 1.0 False =&gt; 0.0 			res = float(var5) # 4399.0 			print(res , type(res)) 			 # 3.complex 强制转换成复数 			res = complex(var1) # 24 + 0j 			res = complex(var2) # 3.14 + 0j 			res = complex(var3) # False =&gt; 0j True =&gt; 1+0j 			res = complex(var5) # 4399 + 0j 			# res = complex(var6) error 			print(res , type(res)) 			 # 4.bool 强制转换成布尔型 	""" 	bool类型为假的十种情况 	0 , 0.0 , 0j , False , '' , [] , () , set() , {} , None 	""" 	# None 是python的关键字,代表空的,什么也没有,一般用来做初始化操作, eg. a1 = None , b1 = None 			res = bool(None)	 			print(res , type(res)) 			 	""" 	总结: 		int() float() bool() complex() 		默认创建一个该数据类型的值 		res = int()  		res = float() 		res = bool() 		res = complex() 		print(res) 	""" </code></pre> <h2> <a id="2_Number__54" rel="nofollow"></a>2. Number 数字类型的自动类型转换</h2> <p>转换规则 =&gt; 默认精度从低到高进行转换: bool -&gt; int -&gt; float -&gt; complex</p> <pre><code># 1.bool + int             res =True + 100 # 1 + 100             print(res) 		 # 2.bool + float             res = True + 3.14 # 1.0 + 3.14             print(res)  # 3.bool + complex             res = False + 5-2j # 0j + 5-2j             res = True + 5-2j  # 1+0j + 5-2j             print(res)  # 4.int + float             res = 5 + 3.14 # 5.0 + 3.14             print(res) 		 # 5.int + complex             res = 20 + 5-2j # 20+0j + 5-2j             print(res) 		 # 6. float + complex             res = 3.14 + 20-9j # 3.14+0j + 20-9j             print(res) </code></pre> <h2> <a id="3__83" rel="nofollow"></a>3. 容器类型数据的强制转换</h2> <pre><code># 我们先定义几个容器类型数据的变量: 		strvar = '红灯停绿灯行' 		listvar = ["张飞","李逵","王瑶"] 		tuplevar = ("小明","小红","小花","小东") 		setvar = {"大喷子","大棍子","大背头"} # 推荐使用变量命名的字符串作为字典的键 		dictvar = {"aaa":123,"bbb":321,"dpz":"巧舌如簧","dgz":"刚正不阿","dbt":"文武双全"} 		intvar = 6666 </code></pre> <h3> <a id="1_str___93" rel="nofollow"></a>1. str 字符串: 强制转换成字符串</h3> <pre><code># str 字符串对容器类型数据和数字类型数据都可以转换 # 特点: 强制转换成字符串,就是在原有数据的基础上两边套上引号 			res = str(listvar) 			res = str(intvar) 			print(res , typr(res))		 # repr: 可以原型化输出字符串,不转义字符(显示出引号) 			print(repr(res)) </code></pre> <h3> <a id="2_list___103" rel="nofollow"></a>2. list 列表: 强制转换成列表</h3> <pre><code># 特点: #	如果是字符串,会把每一个字符单独的作为一个元素放到列表中 #	如果是字典,只保留键,形成一套新的列表 #	如果是其他容器,值是单纯的在原有数据基础上换上[] 			res = list(strvar) 			res = list(tuplevar) 			res = list(setvar) 			res = list(dictvar) 			print(res , type(res)) </code></pre> <h3> <a id="3_tuple___115" rel="nofollow"></a>3. tuple 元组: 强制转换成元组</h3> <pre><code># 注意点: 逗号是区分是否是元组的标识符 # 特点: #	如果是字符串,会把每一个字符单独的作为一个元素放到元组中 #	如果是字典,只保留键,形成一套新的元组 #	如果是其他容器,值是单纯的在原有数据基础上换上() 			res = tuple(strvar) 			res = tuple(listvar) 			res = tuple(setvar) 			res = tuple(dictvar) 			print(res , typr(res)) </code></pre> <h3> <a id="4_set___126" rel="nofollow"></a>4. set 集合: 强制转换成集合</h3> <pre><code># 注意点: 集合无序,且自动去重 # 特点: #	如果是字符串,会把每一个字符单独的作为一个元素放到集合中 #	如果是字典,只保留键,形成一套新的集合 #	如果是其他容器,值是单纯的在原有数据基础上换上{} 			res = set(strvar) 			res = set(listvar) 			res = set(tuplevar) 			res = set(dictvar) 			print(res , type(res)) 			 # 练习:去掉列表中所有重复的数据 			lst =['a','b','c','f','a','c','d',111,123] # 表达方式1 			res = set(lst) 			print(res) 			res = list(res) 			print(res) # 表达方式2 			res = list( set(lst) ) 			print(res) </code></pre> <h3> <a id="5_dict___149" rel="nofollow"></a>5. dict 字典: 强制转换成字典</h3> <pre><code># 特点: 字典强制转换时,必须是等长的二级容器,并且容器里面的元素个数是两个  # 二级容器 (list tuple set dict)  # 等长的二级容器 : 里面的元素都是容器,并且容器里面的元素个数都相同 			lst = [(1,2,3),[4,5,6]] 			lst = [(99,88),(77,66)] # 二级列表 list 			lst = [1,2,[3,4]] # 二级元组 tuple 			tup = (5,6,7,(8,9,10)) # 二级集合 (集合中元素的数据类型要求: int bool float complex str tuple) 			setvar = {11,12,13,(14,15,16)} # 二级字典 (字典中的键的数据类型要求: int bool float complex str tuple) 			dic = {"a":1,"b":{"c":2,"d":3}} # 练习1: 获取'3'这个元素 			res1 = dic["b"] 			print(res1) # {"c":2,"d":3} 			res2 = res1["d"] 			print(res2) # 简写 			res = dic["b"]["d"] 			print(res) # 练习2: 获取'Hello' 	container = [1,2,(3,4,{"a":11,"b":{"c":22,"d":[33,44,"Hello"]}})] # 五级容器 			res1 = container[-1] 			print(res1) 			res2 = res1[-1] 			print(res2) 			res3 = res2["b"] 			print(res3) 			res4 = res3["d"] 			print(res4) 			res5 = res4[-1] 			print(res5) # 简写 			res = container[-1][-1]["b"]["d"][-1] 			print(res) 			 # 强制转换成字典  # 1.外层是列表/元组/集合,里面的容器是列表/元组 			lst = [("a",1),["b",2]] 			tup = (("c",3),["d",4]) 			setvar = {(5,6),[7,8],("f1",1),["f2",2]} 			res = dict(lst) # {"a":1,"b":2} 			res = dict(tup) # {"c":3,"d":4} 			res = dict(setvar) # {6:5,7:8,"f1":1,"f2":2}  			# 因为集合无序,虽然语法上允许,但不符合定义的本意,不推荐使用 			print(res) # 2. 如果使用字符串,语法是哪个正确,但有局限性 			lst = [("q",1),"p8"] # 字符串长度只能是2个 #			lst = [("q",1),"p88"] error 			print( dict(lst) ) # 总结: #	str() list() tuple() set() dict() #	默认创建一个该数据类型的值 </code></pre> <h2> <a id="4__python36_209" rel="nofollow"></a>4. 变量的缓存机制 (仅对python3.6版本负责)</h2> <p><strong>python3.7 和 python3.8 的缓存机制 : 只要两个值相同,就之开辟一个空间</strong></p> <h3> <a id="1_Number__213" rel="nofollow"></a>1. Number 数字类型数据</h3> <pre><code># 1. int 对于整型而言, -5 ~ 正无穷范围内的相同值 id一致 			var1 = 111 			var2 = 222 			var3 = -6 			var4 = -6 			var5 = var6 = -100 # 相同的地址 			print(id(var1) , id(var2)) 			print(id(var3) , id(var4)) 			print(id(var5) , id(var6)) # 2. float 对应浮点型而言, 非负数范围内的相同值 id一致 			var1 = 3.14 			var2 = 3.14 			var3 = -3.14 			var4 = -3.14 			print(id(var1) , id(var2)) 			print(id(var3) , id(var4)) # 3. bool 对应布尔型而言,值相同的情况下 id一致 			var1 = True 			var2 = False 			print(id(var1) , id(var2)) # 4. complex 复数 : 实数 + 虚数 =&gt; 这样的结构中 id永不相同 (只有虚数的情况例外) 			var1 = 3+4j 			var2 = 3+4j 			var3 = 21j 			var4 = 21j 			print(id(var1) , id(var2)) 			print(id(var3) , id(var4)) </code></pre> <h3> <a id="2__241" rel="nofollow"></a>2. 容器类型数据</h3> <pre><code># 1. 字符串 和 空元组 相同的情况下,地址相同 			var1 = "三叉戟" 			var2 = "三叉戟" 			var3 = () 			var4 = () 			print(id(var1) , id(var2)) 			print(id(var3) , id(var4)) # 2. 列表,元组,字典,集合无论什么情况 id都不相同 (空元组除外) 			var1 = (1,2,3) 			var2 = (1,2,3) 			print(id(var1) , id(var2)) </code></pre> </p></div> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-34118.htm">动物疫苗的使用年限 动物疫苗的使用年限是多少年</a></p>
                                        <p>下一个：<a href="/news/article-34597.htm">动物疫苗生产原料 动物疫苗生产原料有哪些</a></p>
                                    </div>
                                    </div>
                    <div class="col-md-3">
                        <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/news/article-19189.htm" title="猫咪抓伤轻微出血要***吗多久（猫轻微抓伤有一点渗血要***吗?）">猫咪抓伤轻微出血要***吗多久（猫轻微抓伤有一点渗血要***吗?）</a></li>
                        <li class="py-2"><a href="/news/article-21016.htm" title="兰州哪里有卖猫粮的（兰州哪里有卖狗粮的地方）">兰州哪里有卖猫粮的（兰州哪里有卖狗粮的地方）</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-11-6-winxray-windows.htm" title="11月6日 | Winxray Github每天更新20M/S免费节点订阅链接">11月6日 | Winxray Github每天更新20M/S免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-9-1-free-node-subscribe.htm" title="9月1日 | Winxray Github每天更新18.9M/S免费节点订阅链接">9月1日 | Winxray Github每天更新18.9M/S免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-10-8-latest-winxray-node.htm" title="10月8日 | Winxray Github每天更新22.5M/S免费节点订阅链接">10月8日 | Winxray Github每天更新22.5M/S免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/news/article-31755.htm" title="SpringBoot三种方式实现定时任务">SpringBoot三种方式实现定时任务</a></li>
                        <li class="py-2"><a href="/news/article-21939.htm" title="开宠物食品厂需要什么手续和证件 开宠物食品厂需要什么手续和证件呢">开宠物食品厂需要什么手续和证件 开宠物食品厂需要什么手续和证件呢</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-12-6-latest-winxray-node.htm" title="12月6日 | Winxray Github每天更新19.3M/S免费节点订阅链接">12月6日 | Winxray Github每天更新19.3M/S免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-9-30-node-share-links.htm" title="9月30日 | Winxray Github每天更新19.6M/S免费节点订阅链接">9月30日 | Winxray Github每天更新19.6M/S免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-10-27-winxray-node-github.htm" title="10月27日 | Winxray Github每天更新21.7M/S免费节点订阅链接">10月27日 | Winxray Github每天更新21.7M/S免费节点订阅链接</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">12</span> <a href="/date/2025-01/" title="2025-01 归档">2025-01</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">93</span> <a href="/date/2024-12/" title="2024-12 归档">2024-12</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">34</span> <a href="/date/2024-11/" title="2024-11 归档">2024-11</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">31</span> <a href="/date/2024-10/" title="2024-10 归档">2024-10</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">30</span> <a href="/date/2024-09/" title="2024-09 归档">2024-09</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">29</span> <a href="/date/2024-08/" title="2024-08 归档">2024-08</a></h4>
            </li>
                    </ul>
    </div>
</div>

                    </div>
                </div>
            </div>
        </div>
                <div class="footer py-5 text-center">
            <div class="container">
                <div class="row mb-5">
                    <div class="col-12">
                        <p class="mb-0">
                            <a href="#" class="p-3"><span class="icon-facebook"></span></a>
                            <a href="#" class="p-3"><span class="icon-twitter"></span></a>
                            <a href="#" class="p-3"><span class="icon-instagram"></span></a>
                            <a href="#" class="p-3"><span class="icon-linkedin"></span></a>
                            <a href="#" class="p-3"><span class="icon-pinterest"></span></a>
                        </p>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                    <p>
                        <a href="/">首页</a> | 
                        <a href="/free-node/">免费节点</a> | 
                        <a href="/news/">新闻资讯</a> |
                        <a href="/about-us.htm">关于我们</a> |
                        <a href="/disclaimer.htm">免责申明</a> |
                        <a href="/privacy.htm">隐私申明</a> |
                        <a href="/sitemap.xml">网站地图</a>
                    </p>
                        <p class="mb-0">
                        Winxray Github免费节点分享站 版权所有 Powered by WordPress
                        </p>
                    </div>
                </div>
            </div>
        </div>
        <script src="/assets/website/js/frontend/winxraygithub/jquery-3.3.1.min.js"></script>
        <script src="/assets/website/js/frontend/winxraygithub/jquery-ui.js"></script>
        <script src="/assets/website/js/frontend/winxraygithub/popper.min.js"></script>
        <script src="/assets/website/js/frontend/winxraygithub/bootstrap.min.js"></script>
        <script src="/assets/website/js/frontend/winxraygithub/owl.carousel.min.js"></script>
        <script src="/assets/website/js/frontend/winxraygithub/jquery.countdown.min.js"></script>
        <script src="/assets/website/js/frontend/winxraygithub/bootstrap-datepicker.min.js"></script>
        <script src="/assets/website/js/frontend/winxraygithub/jquery.easing.1.3.js"></script>
        <script src="/assets/website/js/frontend/winxraygithub/aos.js"></script>
        <script src="/assets/website/js/frontend/winxraygithub/jquery.fancybox.min.js"></script>
        <script src="/assets/website/js/frontend/winxraygithub/jquery.sticky.js"></script>
        <script src="/assets/website/js/frontend/winxraygithub/main.js"></script>
        <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script>
        <script src="/assets/website/js/frontend/G.js"></script>
    </div> <!-- .site-wrap -->
</body>

</html>